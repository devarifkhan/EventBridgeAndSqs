AWSTemplateFormatVersion: 2010-09-09
Description: >-
  EB-SQS #magic___^_^___line
Transform:
- AWS::Serverless-2016-10-31

Resources:
  PutEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/putEvents.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          EVENT_BUS_NAME: !Ref EventBus
      Architectures:
      - x86_64
      Policies:
      - Statement:
        - Sid: SendEvents
          Effect: Allow
          Action:
          - events:PutEvents
          Resource: !GetAtt EventBus.Arn
      MemorySize: 128
      Timeout: 100
      Description: A HTTP post method to post all items.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /generate
            Method: POST


  ProcessEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/processEvent.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          EVENT_BUS_NAME: !Ref EventBus
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A HTTP post method for batch processing.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /batch
            Method: POST
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt TargetSQS.Arn
            BatchSize: 10
            FunctionResponseTypes:
            - ReportBatchItemFailures


    # event bus
  EventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: EB_SQS_EventBus

  # sqs queue
  TargetSQS:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: TargetSQS
      VisibilityTimeout: 110
  # Define the event rule to filter for events
  TargetSQSRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: !GetAtt EventBus.Arn
      EventPattern:
        source:
        - "fuel_app"
        detail-type:
        - "user_sign_up"
      Targets:
      - Arn: !GetAtt TargetSQS.Arn
        Id: eb-sqs-target

  # Allow EventBridge to invoke SQS
  EventBridgeToToSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: SQS:SendMessage
          Resource: !GetAtt TargetSQS.Arn
      Queues:
      - Ref: TargetSQS


Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  PutEventFunction:
    Description: "PutEventFunction ARN"
    Value: !GetAtt PutEventFunction.Arn

  EventBus:
    Description: "EventBus ARN"
    Value: !Ref EventBus
